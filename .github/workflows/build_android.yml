name: Android

on:
  workflow_call:

env:
  APP_NAME: "android-app"
  GITHUB_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  publish-android:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies (frontend)
        working-directory: ./frontend
        run: npm install

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27-beta2
          local-cache: true

      - name: Install Rust stable with targets
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android, armv7-linux-androideabi, i686-linux-android, x86_64-linux-android

      - name: Cache Rust dependencies
        uses: swatinem/rust-cache@v2

      - name: Setup Android signing
        working-directory: ./app/shareCount/src-tauri/gen/android
        run: |
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
          echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          echo "store_password=${{ secrets.SIGNING_STORE_PASSWORD }}" >> keystore.properties
          base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties
          echo "Keystore properties created."

      - name: Install dependencies (app/shareCount)
        working-directory: ./app/shareCount/
        run: npm install

      - name: Build APK
        working-directory: ./app/shareCount/
        run: cargo install tauri-cli --version "^2.0" && cargo tauri android build
        env:
          ROOT_WORKSPACE: ${{ github.workspace }}
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Get Tauri App Version
        working-directory: ./app/shareCount/
        id: app-version
        run: |
          CARGO_TOML_PATH="src-tauri/Cargo.toml"
          if [ ! -f "$CARGO_TOML_PATH" ]; then
            echo "Error: $CARGO_TOML_PATH not found."
            exit 1
          fi
          VERSION_STRING=$(grep '^version = "' "$CARGO_TOML_PATH" | head -n 1 | sed -e 's/version = "//' -e 's/"//')
          if [ -z "$VERSION_STRING" ] || [ "$VERSION_STRING" = "null" ]; then
            echo "Error: Version not found or is invalid in $CARGO_TOML_PATH."
            exit 1
          fi
          echo "version_string=$VERSION_STRING" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Rename APK file
        working-directory: ./app/shareCount/
        run: |
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/${{ env.APP_NAME }}-${{ steps.app-version.outputs.version_string }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-apk-${{ steps.app-version.outputs.version_string }}
          path: ./app/shareCount/src-tauri/gen/android/app/build/outputs/apk/universal/release/${{ env.APP_NAME }}-${{ steps.app-version.outputs.version_string }}.apk
